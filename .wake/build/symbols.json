{"contracts": ["IERCveOLAS", "ERC20", "IVotes", "IErrors", "IERC165", "IERC20", "veOLAS", "OLAS", "IERCOLAS"], "enums": ["DepositType"], "canonical_enums": ["IERCveOLAS.DepositType", "veOLAS.DepositType"], "errors": ["LockNotExpired", "ZeroAddress", "NoValueLocked", "VotesExpiredSignature", "UnlockTimeIncorrect", "OwnerOnly", "NonZeroValue", "MaxUnlockTimeReached", "ManagerOnly", "Overflow", "NonDelegatable", "LockExpired", "WrongBlockNumber", "InsufficientAllowance", "LockedValueNotZero", "NonTransferable", "ZeroValue", "WrongArrayLength"], "canonical_errors": ["IErrors.InsufficientAllowance", "IErrors.LockedValueNotZero", "ManagerOnly", "IERCveOLAS.ManagerOnly", "IErrors.ZeroValue", "IErrors.WrongArrayLength", "IErrors.LockNotExpired", "IErrors.ZeroAddress", "IErrors.OwnerOnly", "IErrors.NoValueLocked", "IErrors.Overflow", "IVotes.VotesExpiredSignature", "IErrors.LockExpired", "IERCveOLAS.ZeroAddress", "IErrors.MaxUnlockTimeReached", "IErrors.NonDelegatable", "IErrors.WrongBlockNumber", "IErrors.NonTransferable", "IErrors.NonZeroValue", "IErrors.UnlockTimeIncorrect", "ZeroAddress"], "events": ["OwnerUpdated", "Withdraw", "MinterUpdated", "Approval", "DelegateVotesChanged", "Deposit", "Supply", "Transfer", "DelegateChanged"], "canonical_events": ["veOLAS.Withdraw", "IERCveOLAS.Transfer", "IVotes.DelegateVotesChanged", "IERC20.Approval", "ERC20.Approval", "OLAS.OwnerUpdated", "IERCOLAS.Approval", "IERCOLAS.OwnerUpdated", "IERC20.Transfer", "IERCOLAS.MinterUpdated", "veOLAS.Deposit", "ERC20.Transfer", "veOLAS.Supply", "IVotes.DelegateChanged", "IERCveOLAS.Approval", "IERCOLAS.Transfer", "OLAS.MinterUpdated"], "functions": ["getLastUserPoint", "withdraw", "delegates", "constructor", "createLockFor", "_mint", "minter", "_findPointByBlock", "checkpoint", "delegate", "getPastVotes", "totalSupply", "increaseAllowance", "permit", "allowance", "createLock", "decreaseAllowance", "totalSupplyLocked", "DOMAIN_SEPARATOR", "computeDomainSeparator", "timeLaunch", "_getBlockTime", "getVotes", "name", "owner", "inflationRemainder", "totalSupplyLockedAtT", "lockedEnd", "_burn", "inflationControl", "oneYear", "maxMintCapFraction", "increaseAmount", "burn", "changeMinter", "approve", "getNumUserPoints", "getUserPoint", "supportsInterface", "decimals", "balanceOfAt", "symbol", "_depositFor", "depositFor", "increaseUnlockTime", "totalSupplyAt", "_checkpoint", "mint", "_createLockFor", "_supplyLockedAt", "delegateBySig", "balanceOf", "transfer", "changeOwner", "tenYearSupplyCap", "getPastTotalSupply", "transferFrom", "_balanceOfLocked"], "canonical_functions": ["OLAS.changeOwner(address)", "IERCOLAS.transferFrom(address,address,uint256)", "IERCveOLAS.totalSupplyLocked()", "IERCveOLAS.withdraw()", "veOLAS.delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)", "IERCveOLAS.getVotes(address)", "ERC20.transferFrom(address,address,uint256)", "OLAS.inflationRemainder()", "IVotes.getVotes(address)", "veOLAS.getPastTotalSupply(uint256)", "IERCveOLAS.inflationControl(uint256)", "IERC20.allowance(address,address)", "IERCveOLAS.burn(uint256)", "IERCOLAS.name()", "veOLAS.depositFor(address,uint256)", "IERCOLAS.approve(address,uint256)", "veOLAS.constructor(address,string,string)", "veOLAS.lockedEnd(address)", "veOLAS.increaseAmount(uint256)", "IERCOLAS.decimals()", "IERCveOLAS.lockedEnd(address)", "IERCveOLAS.increaseAllowance(address,uint256)", "IERCOLAS.minter()", "veOLAS.createLockFor(address,uint256,uint256)", "IERCOLAS.changeMinter(address)", "IERCveOLAS.depositFor(address,uint256)", "IERCOLAS.timeLaunch()", "IERC165.supportsInterface(bytes4)", "ERC20.DOMAIN_SEPARATOR()", "IERCveOLAS.createLockFor(address,uint256,uint256)", "ERC20.permit(address,address,uint256,uint256,uint8,bytes32,bytes32)", "IERCveOLAS.checkpoint()", "veOLAS.totalSupply()", "veOLAS.withdraw()", "veOLAS._getBlockTime(uint256)", "IERCOLAS.increaseAllowance(address,uint256)", "OLAS.burn(uint256)", "IERCveOLAS.changeMinter(address)", "IERCveOLAS.supportsInterface(bytes4)", "IERCOLAS.balanceOf(address)", "veOLAS.getNumUserPoints(address)", "IERCveOLAS.getPastTotalSupply(uint256)", "veOLAS.approve(address,uint256)", "veOLAS.totalSupplyLocked()", "IERCOLAS.symbol()", "IERC20.transfer(address,uint256)", "ERC20.transfer(address,uint256)", "OLAS.increaseAllowance(address,uint256)", "OLAS.inflationControl(uint256)", "IERCveOLAS.delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)", "IERCveOLAS.changeOwner(address)", "IERCOLAS.allowance(address,address)", "IERCOLAS.transfer(address,uint256)", "IERCveOLAS.name()", "IERCOLAS.oneYear()", "IERCveOLAS.increaseUnlockTime(uint256)", "IERCveOLAS.increaseAmount(uint256)", "IERCOLAS.totalSupply()", "IERCveOLAS.symbol()", "ERC20.approve(address,uint256)", "IERCveOLAS.allowance(address,address)", "IERCveOLAS.createLock(uint256,uint256)", "veOLAS.totalSupplyAt(uint256)", "IERCveOLAS.mint(address,uint256)", "IERCOLAS.decreaseAllowance(address,uint256)", "veOLAS.createLock(uint256,uint256)", "IERCveOLAS.decreaseAllowance(address,uint256)", "veOLAS.increaseUnlockTime(uint256)", "IERCOLAS.owner()", "IERCveOLAS.decimals()", "IERCOLAS.maxMintCapFraction()", "IERCveOLAS.getNumUserPoints(address)", "veOLAS.getVotes(address)", "veOLAS.transferFrom(address,address,uint256)", "IERCveOLAS.delegates(address)", "IERCveOLAS.getUserPoint(address,uint256)", "IVotes.delegates(address)", "ERC20.constructor(string,string,uint8)", "IERCOLAS.inflationRemainder()", "veOLAS.supportsInterface(bytes4)", "veOLAS.getPastVotes(address,uint256)", "IERCveOLAS.getLastUserPoint(address)", "veOLAS.checkpoint()", "IERCveOLAS.delegate(address)", "IVotes.delegate(address)", "IERC20.transferFrom(address,address,uint256)", "IERCveOLAS.transfer(address,uint256)", "IERCveOLAS.totalSupplyAt(uint256)", "IERCveOLAS.balanceOfAt(address,uint256)", "OLAS.decreaseAllowance(address,uint256)", "ERC20.computeDomainSeparator()", "IERC20.approve(address,uint256)", "OLAS.constructor()", "veOLAS._findPointByBlock(uint256,address)", "veOLAS.delegates(address)", "IERCveOLAS.transferFrom(address,address,uint256)", "veOLAS._supplyLockedAt(struct PointVoting,uint64)", "IVotes.delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)", "veOLAS._checkpoint(address,struct LockedBalance,struct LockedBalance,uint128)", "veOLAS.getUserPoint(address,uint256)", "OLAS.mint(address,uint256)", "veOLAS.totalSupplyLockedAtT(uint256)", "veOLAS.balanceOfAt(address,uint256)", "veOLAS.allowance(address,address)", "IERCveOLAS.balanceOf(address)", "IERCveOLAS.getPastVotes(address,uint256)", "IERCveOLAS.approve(address,uint256)", "IERCOLAS.inflationControl(uint256)", "veOLAS.delegate(address)", "IERC20.balanceOf(address)", "IERC20.totalSupply()", "IERCOLAS.tenYearSupplyCap()", "IERCOLAS.changeOwner(address)", "veOLAS._depositFor(address,uint256,uint256,struct LockedBalance,enum veOLAS.DepositType)", "OLAS.changeMinter(address)", "IERCOLAS.mint(address,uint256)", "IERCveOLAS.totalSupply()", "IVotes.getPastVotes(address,uint256)", "IERCveOLAS.inflationRemainder()", "IERCOLAS.burn(uint256)", "ERC20._burn(address,uint256)", "veOLAS.getLastUserPoint(address)", "IVotes.getPastTotalSupply(uint256)", "veOLAS._createLockFor(address,uint256,uint256)", "veOLAS._balanceOfLocked(address,uint64)", "ERC20._mint(address,uint256)", "veOLAS.balanceOf(address)", "veOLAS.transfer(address,uint256)"], "modifiers": [], "canonical_modifiers": [], "structs": ["LockedBalance", "PointVoting"], "canonical_structs": ["IERCveOLAS.PointVoting", "LockedBalance", "PointVoting", "IERCveOLAS.LockedBalance"], "user_defined_value_types": [], "canonical_user_defined_value_types": [], "variables": ["minter", "mapSupplyPoints", "INITIAL_CHAIN_ID", "mapSlopeChanges", "totalSupply", "mapUserPoints", "allowance", "timeLaunch", "IMAXTIME", "INITIAL_DOMAIN_SEPARATOR", "name", "owner", "maxMintCapFraction", "oneYear", "decimals", "token", "symbol", "WEEK", "totalNumPoints", "balanceOf", "MAXTIME", "nonces", "mapLockedBalances", "tenYearSupplyCap", "supply"], "canonical_variables": ["veOLAS.WEEK", "OLAS.oneYear", "OLAS.owner", "OLAS.timeLaunch", "ERC20.nonces", "veOLAS.decimals", "veOLAS.mapUserPoints", "veOLAS.mapLockedBalances", "ERC20.allowance", "OLAS.maxMintCapFraction", "ERC20.decimals", "veOLAS.mapSlopeChanges", "veOLAS.symbol", "ERC20.totalSupply", "veOLAS.name", "veOLAS.IMAXTIME", "veOLAS.MAXTIME", "ERC20.name", "ERC20.balanceOf", "ERC20.symbol", "OLAS.minter", "OLAS.tenYearSupplyCap", "ERC20.INITIAL_CHAIN_ID", "veOLAS.token", "veOLAS.supply", "veOLAS.totalNumPoints", "ERC20.INITIAL_DOMAIN_SEPARATOR", "veOLAS.mapSupplyPoints"]}